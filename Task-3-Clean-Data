# Task 3: Clean our data!

# Task 3.4: Convert “Running time” field to an integer
def minutes_to_integer(running_time):
    if running_time == "N/A":
        return None    
    if isinstance(running_time, list):
        return int(running_time[0].split(" ")[0])
    else: # is a string
        return int(running_time.split(" ")[0])
 
# Task 3.5: Convert “Budget” & “Box office” fields to floats
import re

amounts = r"thousand|million|billion"
number = r"\d+(,\d{3})*\.*\d*"
word_re = fr"\${number}(-|\sto\s)?({number})?\s({amounts})"

def word_to_value(word):
    value_dict = {"thousand": 1000, "million": 1000000, "billion": 1000000000}
    return value_dict[word.lower()]

def parse_word_syntax(string):
    stripped_string = string.replace(",", "")
    value = float(re.search(number, stripped_string).group())
    modifier = word_to_value(re.search(amounts, string, flags=re.I).group())
    return value * modifier

def parse_value_syntax(string):
    stripped_string = string.replace(",", "")
    return float(re.search(number, stripped_string).group())

def money_conversion(money):
    if money == "N/A":
        return None
    if type(money) == list:
        money = money[0]
        
    word_syntax = re.search(word_re, money, flags=re.I)
    value_syntax = re.search(fr"\${number}", money)

    if word_syntax:
        return parse_word_syntax(word_syntax.group())
    elif value_syntax:
        return parse_value_syntax(value_syntax.group())
    else:
        return None 
 

from datetime import datetime
def clean_date(date):
    return date.split("(")[0].strip()

def date_conversion(date):
    if isinstance(date, list):
        date = date[0]        
    if date == "N/A":
        return None
        
    date_str = clean_date(date)
    fmts = ["%B %d, %Y", "%d %B %Y"]
    for fmt in fmts:
        try:
            return datetime.strptime(date_str, fmt)
        except:
            pass
    return None

for movie in movies_info:
    movie['Running time'] = minutes_to_integer(movie.get('Running time', "N/A"))
    movie['Budget'] = money_conversion(movie.get('Budget', "N/A"))
    movie['Box office'] = money_conversion(movie.get('Box office', "N/A"))
    movie['Release date'] = date_conversion(movie.get('Release date', 'N/A'))
 
 
# load and save data with pickle
import pickle

def save_data_pickle(filename, data):
    with open(filename, 'wb') as f:
        pickle.dump(data, f)

def load_data_pickle(filename):
    with open(filename, 'rb') as f:
        return pickle.load(f)
        

save_data_pickle("disney_movie_data.pickle", movies_info)
movies_info = load_data_pickle("disney_movie_data.pickle")
    
